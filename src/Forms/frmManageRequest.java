/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import PersonManagement.User;
import ProductManagement.Product;
import ProductManagement.ProductManagement_Methods;
import ProductManagement.UserRequest;
import bc_stationary_bll.Communication;
import bc_stationary_bll.CustomException;
import bc_stationary_bll.GenericSerializer;
import bc_stationary_management_system.ClientHandler;
import java.awt.Color;
import java.io.IOException;
import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Eldane
 */
public class frmManageRequest extends javax.swing.JFrame {

    /**
     * Creates new form frmManageRequest
     */
    public ArrayList<Product> products;
    public User loggedInuser;
    Communication c;
    public final LocalDate local = LocalDate.now();
    public final Date date = Date.valueOf(local);
    public frmManageRequest() {
        try {
            initComponents();
            this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
            this.getContentPane().setBackground(new Color(45,45,45));
            lblListHeading.setText(String.format("%S                %S          %S          %S              %S          %S", "Product","Qty","Priority","Status","Request Date","Complete Date"));
            Product product = new Product();
            c = new Communication(ProductManagement_Methods.PRODUCT_SELECT_ALL.methodIdentifier, product);
            products = new ClientHandler(c).request().listResult;
            
            cmbProduct.addItem("Select a Product:");
            for(Product p:products){
                cmbProduct.addItem(p.getName()+"("+ p.getDescription()+"-"+p.getModel().getDescription()+")");
            }
            
            loggedInuser = new User();
            GenericSerializer gen = new GenericSerializer("loggedUser.txt",loggedInuser);
            loggedInuser = (User)gen.Deserialize();
            
            txtProductName.setEditable(false);
            txtCategory.setEditable(false);
            txtProductModel.setEditable(false);
            txtDescription.setEditable(false);
            
            txtLoggedUser.setText(loggedInuser.getPerson().getName() +" "+ loggedInuser.getPerson().getSurname());
            txtLoggedUser.setEditable(false); // Default value: name and surname of the currently logged in user.

            txtRequestDate.setText(date.toString()); 
            txtRequestDate.setEditable(false); // Default value: today's date.
        } 
        catch (IOException ex) {
            CustomException ce = new CustomException(date.toString()+": (In Product Class) select() method failed!",ex);
            GenericSerializer gen = new GenericSerializer("ExceptionHandler.txt",ce);
            gen.Serialize(true); // append to file
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainDashHeader = new javax.swing.JPanel();
        pnlRegisterHeader1 = new javax.swing.JPanel();
        lblAddRequest = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        btnViewRequest = new javax.swing.JButton();
        btnAddRequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnEditRequest = new javax.swing.JButton();
        lblSearchProducts = new javax.swing.JLabel();
        cmbProduct = new javax.swing.JComboBox<>();
        pnlProjectInfo = new javax.swing.JPanel();
        lblProductInfo = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        lblProductModel = new javax.swing.JLabel();
        txtProductModel = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        pnlProjectInfo2 = new javax.swing.JPanel();
        lblRequestInfo = new javax.swing.JLabel();
        lblLoggedUser = new javax.swing.JLabel();
        txtLoggedUser = new javax.swing.JTextField();
        lblRequestDate = new javax.swing.JLabel();
        txtRequestDate = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        numQuantity = new javax.swing.JSpinner();
        lblPriority = new javax.swing.JLabel();
        cmbPriority = new javax.swing.JComboBox<>();
        btnAddItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbxRequestedItems = new javax.swing.JList<>();
        btnSubmitRequest = new javax.swing.JButton();
        lblListHeading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlMainDashHeader.setBackground(new java.awt.Color(255, 255, 0));
        pnlMainDashHeader.setPreferredSize(new java.awt.Dimension(1071, 530));

        pnlRegisterHeader1.setBackground(new java.awt.Color(204, 0, 0));
        pnlRegisterHeader1.setPreferredSize(new java.awt.Dimension(1307, 65));

        lblAddRequest.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblAddRequest.setForeground(new java.awt.Color(255, 255, 255));
        lblAddRequest.setText("Add Request");
        lblAddRequest.setAlignmentY(0.0F);

        javax.swing.GroupLayout pnlRegisterHeader1Layout = new javax.swing.GroupLayout(pnlRegisterHeader1);
        pnlRegisterHeader1.setLayout(pnlRegisterHeader1Layout);
        pnlRegisterHeader1Layout.setHorizontalGroup(
            pnlRegisterHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterHeader1Layout.createSequentialGroup()
                .addGap(607, 607, 607)
                .addComponent(lblAddRequest)
                .addContainerGap(744, Short.MAX_VALUE))
        );
        pnlRegisterHeader1Layout.setVerticalGroup(
            pnlRegisterHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterHeader1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAddRequest)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMainDashHeaderLayout = new javax.swing.GroupLayout(pnlMainDashHeader);
        pnlMainDashHeader.setLayout(pnlMainDashHeaderLayout);
        pnlMainDashHeaderLayout.setHorizontalGroup(
            pnlMainDashHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegisterHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        pnlMainDashHeaderLayout.setVerticalGroup(
            pnlMainDashHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainDashHeaderLayout.createSequentialGroup()
                .addComponent(pnlRegisterHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu.setBackground(new java.awt.Color(40, 40, 40));

        btnViewRequest.setBackground(new java.awt.Color(40, 40, 40));
        btnViewRequest.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnViewRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnViewRequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/View.png"))); // NOI18N
        btnViewRequest.setText("View Request");
        btnViewRequest.setBorder(null);
        btnViewRequest.setBorderPainted(false);
        btnViewRequest.setContentAreaFilled(false);
        btnViewRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewRequest.setFocusPainted(false);
        btnViewRequest.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnViewRequest.setIconTextGap(16);
        btnViewRequest.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/View_Red.png"))); // NOI18N
        btnViewRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestActionPerformed(evt);
            }
        });

        btnAddRequest.setBackground(new java.awt.Color(204, 0, 0));
        btnAddRequest.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnAddRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/Add1_Red.png"))); // NOI18N
        btnAddRequest.setText("Add Request");
        btnAddRequest.setBorder(null);
        btnAddRequest.setBorderPainted(false);
        btnAddRequest.setContentAreaFilled(false);
        btnAddRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddRequest.setFocusPainted(false);
        btnAddRequest.setIconTextGap(20);

        btnBack.setBackground(new java.awt.Color(204, 0, 0));
        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/Back1.png"))); // NOI18N
        btnBack.setText("Main Dash");
        btnBack.setBorder(null);
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusPainted(false);
        btnBack.setIconTextGap(38);
        btnBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/Back1_red.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnEditRequest.setBackground(new java.awt.Color(204, 0, 0));
        btnEditRequest.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnEditRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnEditRequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/Edit1.png"))); // NOI18N
        btnEditRequest.setText("Edit Request");
        btnEditRequest.setBorder(null);
        btnEditRequest.setBorderPainted(false);
        btnEditRequest.setContentAreaFilled(false);
        btnEditRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditRequest.setFocusPainted(false);
        btnEditRequest.setIconTextGap(22);
        btnEditRequest.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/Edit1_Red.png"))); // NOI18N
        btnEditRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditRequest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(btnAddRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(762, Short.MAX_VALUE))
        );

        lblSearchProducts.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblSearchProducts.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchProducts.setText("Select a Product:");

        cmbProduct.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        cmbProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbProduct.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbProductPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        pnlProjectInfo.setBackground(new java.awt.Color(45, 45, 45));
        pnlProjectInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblProductInfo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblProductInfo.setForeground(new java.awt.Color(255, 255, 255));
        lblProductInfo.setText("Product Information");

        lblProductName.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("Product Name:");

        txtProductName.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtProductName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtDescription.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtDescription.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblDescription.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblDescription.setForeground(new java.awt.Color(255, 255, 255));
        lblDescription.setText("Description:");

        lblCategory.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblCategory.setForeground(new java.awt.Color(255, 255, 255));
        lblCategory.setText("Category:");

        lblProductModel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblProductModel.setForeground(new java.awt.Color(255, 255, 255));
        lblProductModel.setText("Model:");

        txtProductModel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtProductModel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtCategory.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtCategory.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnlProjectInfoLayout = new javax.swing.GroupLayout(pnlProjectInfo);
        pnlProjectInfo.setLayout(pnlProjectInfoLayout);
        pnlProjectInfoLayout.setHorizontalGroup(
            pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectInfoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductName)
                    .addComponent(lblProductModel)
                    .addComponent(lblProductInfo))
                .addGap(10, 10, 10)
                .addGroup(pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProjectInfoLayout.createSequentialGroup()
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProjectInfoLayout.createSequentialGroup()
                        .addComponent(txtProductModel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlProjectInfoLayout.setVerticalGroup(
            pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectInfoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblProductInfo)
                .addGap(18, 18, 18)
                .addGroup(pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescription)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategory)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlProjectInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductModel)
                    .addComponent(txtProductModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlProjectInfo2.setBackground(new java.awt.Color(45, 45, 45));
        pnlProjectInfo2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblRequestInfo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblRequestInfo.setForeground(new java.awt.Color(255, 255, 255));
        lblRequestInfo.setText("Request Information");

        lblLoggedUser.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblLoggedUser.setForeground(new java.awt.Color(255, 255, 255));
        lblLoggedUser.setText("Staff member:");

        txtLoggedUser.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtLoggedUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblRequestDate.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblRequestDate.setForeground(new java.awt.Color(255, 255, 255));
        lblRequestDate.setText("Request Date:");

        txtRequestDate.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtRequestDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblQuantity.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantity.setText("Enter quantity:");

        numQuantity.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        numQuantity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPriority.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblPriority.setForeground(new java.awt.Color(255, 255, 255));
        lblPriority.setText("Assign Priority:");

        cmbPriority.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        cmbPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "High" }));

        btnAddItem.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnAddItem.setText("Add Item");
        btnAddItem.setBorderPainted(false);
        btnAddItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddItem.setFocusPainted(false);
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProjectInfo2Layout = new javax.swing.GroupLayout(pnlProjectInfo2);
        pnlProjectInfo2.setLayout(pnlProjectInfo2Layout);
        pnlProjectInfo2Layout.setHorizontalGroup(
            pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblRequestInfo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProjectInfo2Layout.createSequentialGroup()
                .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddItem))
                    .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                                .addComponent(lblQuantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                                .addComponent(lblLoggedUser)
                                .addGap(18, 18, 18)
                                .addComponent(txtLoggedUser, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRequestDate)
                            .addComponent(lblPriority))
                        .addGap(18, 18, 18)
                        .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRequestDate)
                            .addComponent(cmbPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(58, 58, 58))
        );
        pnlProjectInfo2Layout.setVerticalGroup(
            pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectInfo2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblRequestInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoggedUser)
                    .addComponent(txtLoggedUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRequestDate)
                    .addComponent(txtRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlProjectInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(numQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPriority)
                    .addComponent(cmbPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbxRequestedItems.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lbxRequestedItems.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(lbxRequestedItems);

        btnSubmitRequest.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        btnSubmitRequest.setText("Submit Request");
        btnSubmitRequest.setBorderPainted(false);
        btnSubmitRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmitRequest.setFocusPainted(false);
        btnSubmitRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitRequestActionPerformed(evt);
            }
        });

        lblListHeading.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblListHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblListHeading.setText("Product");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMainDashHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 1500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSearchProducts)
                                    .addGap(65, 65, 65)
                                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(pnlProjectInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pnlProjectInfo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSubmitRequest)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblListHeading)))))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMainDashHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSearchProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(pnlProjectInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlProjectInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblListHeading)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSubmitRequest)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestActionPerformed
        frmViewRequest viewR = new frmViewRequest();
        viewR.setVisible(true);
        this.setVisible(false);           
    }//GEN-LAST:event_btnViewRequestActionPerformed

    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        StandardMainDash mainDash = new StandardMainDash();
        mainDash.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    
    public ArrayList<UserRequest> requestItems = new ArrayList<UserRequest>();
    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        String priority, requestDate;
        int quantity, priorityLevel=0;
        UserRequest request = null;
        LocalDate completeDate;
        if(!"".equals(txtProductName.getText()))
        {
            lblSearchProducts.setForeground(Color.white);   
            if((Integer)numQuantity.getValue() > 0) // The quantity value cannot be negative
            {
                lblQuantity.setForeground(Color.white);
                priority = cmbPriority.getSelectedItem().toString();
                requestDate = txtRequestDate.getText();
                quantity = (Integer)numQuantity.getValue();
                
                if(priority.toLowerCase().equals("low"))
                {
                    priorityLevel = 1;
                }
                else if(priority.toLowerCase().equals("medium"))
                {
                    priorityLevel = 2;
                }
                else if(priority.toLowerCase().equals("high"))
                {
                    priorityLevel = 3;
                }
                completeDate = LocalDate.now().minusDays(1); // An incomplete request will be identified when the completeDate is less than the reqDate
                
                request = new UserRequest(loggedInuser,selectedProduct,quantity,priorityLevel,"Unprocessed",Date.valueOf(requestDate),Date.valueOf(completeDate));
                requestItems.add(request);
               
                if(requestItems.size() > 0)
                {
                    DefaultListModel model = new DefaultListModel();
                    // Populate Listbox
                    for (UserRequest u : requestItems) {
                        model.addElement(u);
                    }   

                    lbxRequestedItems.setModel(model);
                    
                    cmbProduct.setSelectedIndex(0);
                    txtProductName.setText("");
                    txtProductModel.setText("");
                    txtCategory.setText("");
                    txtDescription.setText("");
                    numQuantity.setValue(0);
                    cmbPriority.setSelectedIndex(0);
                    cmbProduct.grabFocus();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "There are no items to add to the request!","Insufficient Items",JOptionPane.WARNING_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Quantity cannot be 0!","Incorrect Quantity",JOptionPane.WARNING_MESSAGE);
                lblQuantity.setForeground(Color.red); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a product that you want to request!","Incorrect Product",JOptionPane.WARNING_MESSAGE);
            lblSearchProducts.setForeground(Color.red);      
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnSubmitRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitRequestActionPerformed
        try {
            boolean success = true;
            UserRequest request = new UserRequest();
            c = new Communication(ProductManagement_Methods.UR_SELECT_UNPROCESSED.methodIdentifier, request);
            ArrayList<UserRequest> loggedRequests = new ClientHandler(c).request().listResult;
            
            for(UserRequest uNew : requestItems) // loop through the listbox
            {
                if(loggedRequests.size() > 0) // if there are existing user requests with a status of Unprocessed or Back Ordered 
                {
                    for(UserRequest uOld : loggedRequests)
                    {
                        String newProductName = uNew.getProduct().getName();
                        String existingProductName = uOld.getProduct().getName();
                        String newUserName = uNew.getUser().getUsername();
                        String existingUserName = uOld.getUser().getUsername();
                        
                        int newQuantity=0, existingQuantity=0, newPriority=0, existingPriority=0;
                        
                        // If a there is an existing user request that is still Unprocessed for the same product and user,
                        // then it must append the quantity to the existing requested quantity.
                        // If no existing user request that fit this criteria exist then a new user request must be created.
                        if((newProductName.equals(existingProductName))&&(newUserName.equals(existingUserName)))
                        {
                            try {
                                newQuantity = uNew.getQuantity();
                                existingQuantity = uOld.getQuantity();
                                uNew.setQuantity(newQuantity + existingQuantity); // add quantities of the same Unprocessed Product
                                
                                newPriority = uNew.getPriorityLevel();
                                existingPriority = uOld.getPriorityLevel();
                                if(newPriority < existingPriority) // check if new priority is now higher or not
                                {
                                    uNew.setPriorityLevel(existingPriority);
                                }
                                
                                c = new Communication(ProductManagement_Methods.UR_UPDATE.methodIdentifier, uNew);
                                int uNewUpdateSuccess = new ClientHandler(c).request().intResult;
                                if(uNewUpdateSuccess == -1) // update existing Unprocessed Product
                                {
                                    success = false;
                                }
                            } catch (IOException ex) {
                                CustomException ce = new CustomException(date.toString()+": (In UserRequest Class) update() method failed!",ex);
                                GenericSerializer gen = new GenericSerializer("ExceptionHandler.txt",ce);
                                gen.Serialize(true); // append to file
                            }
                        }
                        else
                        {
                            try {
                                c = new Communication(ProductManagement_Methods.UR_INSERT.methodIdentifier, uNew);
                                int uNewInsertSuccess = new ClientHandler(c).request().intResult;
                                if(uNewInsertSuccess == -1)
                                {
                                    success = false;
                                }
                            } catch (IOException ex) {
                                CustomException ce = new CustomException(date.toString()+": (In UserRequest Class) insert() method failed!",ex);
                                GenericSerializer gen = new GenericSerializer("ExceptionHandler.txt",ce);
                                gen.Serialize(true); // append to file
                            }
                        }
                    }
                }
                else
                {
                    try {
                        c = new Communication(ProductManagement_Methods.UR_INSERT.methodIdentifier, uNew);
                        int uNewInsertSuccess = new ClientHandler(c).request().intResult;
                        if(uNewInsertSuccess == -1)
                        {
                            success = false;
                        }
                    } catch (IOException ex) {
                        CustomException ce = new CustomException(date.toString()+": (In UserRequest Class) insert() method failed!",ex);
                        GenericSerializer gen = new GenericSerializer("ExceptionHandler.txt",ce);
                        gen.Serialize(true); // append to file
                    }
                }  
            }

            if(success)
            {
                JOptionPane.showMessageDialog(null, "Request was successfully submitted!", "Successful Submission", JOptionPane.INFORMATION_MESSAGE);
                StandardMainDash mainDash = new StandardMainDash();
                mainDash.setVisible(true);
                this.setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Error occured during this process!", "Unsuccessful Submission", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException ex) {
            CustomException ce = new CustomException(date.toString()+": (In UserRequest Class) selectUnprocessed() method failed!",ex);
            GenericSerializer gen = new GenericSerializer("ExceptionHandler.txt",ce);
            gen.Serialize(true); // append to file
        }
        
        
    }//GEN-LAST:event_btnSubmitRequestActionPerformed

    private void btnEditRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRequestActionPerformed
        frmEditRequest editR = new frmEditRequest();
        editR.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnEditRequestActionPerformed

    public Product selectedProduct;
    private void cmbProductPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbProductPopupMenuWillBecomeInvisible
        if(cmbProduct.getSelectedIndex() > 0)
        {
            String selectedProductSearch = cmbProduct.getSelectedItem().toString();
            String searchedProduct = selectedProductSearch.substring(0,selectedProductSearch.indexOf("("));
            String searchedDescription = selectedProductSearch.substring(selectedProductSearch.indexOf("(")+1,selectedProductSearch.indexOf("-"));
            String searchedModel = selectedProductSearch.substring(selectedProductSearch.indexOf("-")+1,selectedProductSearch.indexOf(")"));

            selectedProduct = new Product();
            for(Product p : products)
            {
                if((p.getName().equals(searchedProduct)&&(p.getDescription().equals(searchedDescription))&&(p.getModel().getDescription().equals(searchedModel))))
                {
                    selectedProduct = p;
                }
            }
        
            txtProductName.setText(selectedProduct.getName());
            txtProductName.setEditable(false);

            txtDescription.setText(selectedProduct.getDescription());
            txtDescription.setEditable(false);
        
            txtCategory.setText(selectedProduct.getCategory().getDescription()); 
            txtCategory.setEditable(false);

            txtProductModel.setText(selectedProduct.getModel().getDescription());
            txtProductModel.setEditable(false);
        }     
    }//GEN-LAST:event_cmbProductPopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmManageRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmManageRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmManageRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmManageRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmManageRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAddRequest;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEditRequest;
    private javax.swing.JButton btnSubmitRequest;
    private javax.swing.JButton btnViewRequest;
    private javax.swing.JComboBox<String> cmbPriority;
    private javax.swing.JComboBox<String> cmbProduct;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddRequest;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblListHeading;
    private javax.swing.JLabel lblLoggedUser;
    private javax.swing.JLabel lblPriority;
    private javax.swing.JLabel lblProductInfo;
    private javax.swing.JLabel lblProductModel;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRequestDate;
    private javax.swing.JLabel lblRequestInfo;
    private javax.swing.JLabel lblSearchProducts;
    private javax.swing.JList<String> lbxRequestedItems;
    private javax.swing.JSpinner numQuantity;
    private javax.swing.JPanel pnlMainDashHeader;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlProjectInfo;
    private javax.swing.JPanel pnlProjectInfo2;
    private javax.swing.JPanel pnlRegisterHeader1;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtLoggedUser;
    private javax.swing.JTextField txtProductModel;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtRequestDate;
    // End of variables declaration//GEN-END:variables
}
